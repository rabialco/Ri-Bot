plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.bot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.linecorp.bot:line-bot-spring-boot:1.15.0'
    implementation 'com.linecorp.bot:line-bot-servlet:1.15.0'
    implementation 'com.linecorp.bot:line-bot-model:1.15.0'
    implementation 'com.linecorp.bot:line-bot-api-client:1.15.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

//buildscript {
//    ext.junitVersion = '5.6.0'
//    ext.checkstyleVersion = '8.29'
//    ext.checkstyleConfig = 'google_checks.xml'
//}


tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/checkstyle/google_checks.xml')
    }
}

//subprojects {
//    apply plugin: 'java'
//    apply plugin: 'application'
//    apply plugin: 'checkstyle'
//    checkstyle {
//        toolVersion = checkstyleVersion
//        config = resources.text.fromFile(configDirectory.file("${checkstyleConfig}"))
//        maxWarnings = 0  // Fail the build if there are any warnings
//        sourceSets = []  // Do not run checkstyle on gradle build/check
//    }
//}